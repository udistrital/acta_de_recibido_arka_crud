swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /acta_recibido/:
    get:
      tags:
      - acta_recibido
      description: get ActaRecibido
      operationId: ActaRecibidoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "404":
          description: not found resource
    post:
      tags:
      - acta_recibido
      description: create ActaRecibido
      operationId: ActaRecibidoController.Post
      parameters:
      - in: body
        name: body
        description: body for ActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ActaRecibido'
      responses:
        "201":
          description: '{int} models.ActaRecibido'
        "400":
          description: the request contains incorrect syntax
  /acta_recibido/{id}:
    get:
      tags:
      - acta_recibido
      description: get ActaRecibido by id
      operationId: ActaRecibidoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "404":
          description: not found resource
    put:
      tags:
      - acta_recibido
      description: update the ActaRecibido
      operationId: ActaRecibidoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ActaRecibido'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - acta_recibido
      description: delete the ActaRecibido
      operationId: ActaRecibidoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /elemento/:
    get:
      tags:
      - elemento
      description: get Elemento
      operationId: ElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "404":
          description: not found resource
    post:
      tags:
      - elemento
      description: create Elemento
      operationId: ElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for Elemento content
        required: true
        schema:
          $ref: '#/definitions/models.Elemento'
      responses:
        "201":
          description: '{int} models.Elemento'
        "400":
          description: the request contains incorrect syntax
  /elemento/{id}:
    get:
      tags:
      - elemento
      description: get Elemento by id
      operationId: ElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "404":
          description: not found resource
    put:
      tags:
      - elemento
      description: update the Elemento
      operationId: ElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Elemento content
        required: true
        schema:
          $ref: '#/definitions/models.Elemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - elemento
      description: delete the Elemento
      operationId: ElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_acta/:
    get:
      tags:
      - estado_acta
      description: get EstadoActa
      operationId: EstadoActaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActa'
        "404":
          description: not found resource
    post:
      tags:
      - estado_acta
      description: create EstadoActa
      operationId: EstadoActaController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoActa content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoActa'
      responses:
        "201":
          description: '{int} models.EstadoActa'
        "400":
          description: the request contains incorrect syntax
  /estado_acta/{id}:
    get:
      tags:
      - estado_acta
      description: get EstadoActa by id
      operationId: EstadoActaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActa'
        "404":
          description: not found resource
    put:
      tags:
      - estado_acta
      description: update the EstadoActa
      operationId: EstadoActaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoActa content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoActa'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActa'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_acta
      description: delete the EstadoActa
      operationId: EstadoActaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_elemento/:
    get:
      tags:
      - estado_elemento
      description: get EstadoElemento
      operationId: EstadoElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoElemento'
        "404":
          description: not found resource
    post:
      tags:
      - estado_elemento
      description: create EstadoElemento
      operationId: EstadoElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoElemento content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoElemento'
      responses:
        "201":
          description: '{int} models.EstadoElemento'
        "400":
          description: the request contains incorrect syntax
  /estado_elemento/{id}:
    get:
      tags:
      - estado_elemento
      description: get EstadoElemento by id
      operationId: EstadoElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoElemento'
        "404":
          description: not found resource
    put:
      tags:
      - estado_elemento
      description: update the EstadoElemento
      operationId: EstadoElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoElemento content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoElemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoElemento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_elemento
      description: delete the EstadoElemento
      operationId: EstadoElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /historico_acta/:
    get:
      tags:
      - historico_acta
      description: get HistoricoActa
      operationId: HistoricoActaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoricoActa'
        "404":
          description: not found resource
    post:
      tags:
      - historico_acta
      description: create HistoricoActa
      operationId: HistoricoActaController.Post
      parameters:
      - in: body
        name: body
        description: body for HistoricoActa content
        required: true
        schema:
          $ref: '#/definitions/models.HistoricoActa'
      responses:
        "201":
          description: '{int} models.HistoricoActa'
        "400":
          description: the request contains incorrect syntax
  /historico_acta/{id}:
    get:
      tags:
      - historico_acta
      description: get HistoricoActa by id
      operationId: HistoricoActaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoricoActa'
        "404":
          description: not found resource
    put:
      tags:
      - historico_acta
      description: update the HistoricoActa
      operationId: HistoricoActaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for HistoricoActa content
        required: true
        schema:
          $ref: '#/definitions/models.HistoricoActa'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoricoActa'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - historico_acta
      description: delete the HistoricoActa
      operationId: HistoricoActaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /soporte_acta/:
    get:
      tags:
      - soporte_acta
      description: get SoporteActa
      operationId: SoporteActaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteActa'
        "404":
          description: not found resource
    post:
      tags:
      - soporte_acta
      description: create SoporteActa
      operationId: SoporteActaController.Post
      parameters:
      - in: body
        name: body
        description: body for SoporteActa content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteActa'
      responses:
        "201":
          description: '{int} models.SoporteActa'
        "400":
          description: the request contains incorrect syntax
  /soporte_acta/{id}:
    get:
      tags:
      - soporte_acta
      description: get SoporteActa by id
      operationId: SoporteActaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteActa'
        "404":
          description: not found resource
    put:
      tags:
      - soporte_acta
      description: update the SoporteActa
      operationId: SoporteActaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SoporteActa content
        required: true
        schema:
          $ref: '#/definitions/models.SoporteActa'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoporteActa'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - soporte_acta
      description: delete the SoporteActa
      operationId: SoporteActaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_bien/:
    get:
      tags:
      - tipo_bien
      description: get TipoBien
      operationId: TipoBienController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_bien
      description: create TipoBien
      operationId: TipoBienController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoBien content
        required: true
        schema:
          $ref: '#/definitions/models.TipoBien'
      responses:
        "201":
          description: '{int} models.TipoBien'
        "400":
          description: the request contains incorrect syntax
  /tipo_bien/{id}:
    get:
      tags:
      - tipo_bien
      description: get TipoBien by id
      operationId: TipoBienController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_bien
      description: update the TipoBien
      operationId: TipoBienController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoBien content
        required: true
        schema:
          $ref: '#/definitions/models.TipoBien'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_bien
      description: delete the TipoBien
      operationId: TipoBienController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /transaccion_acta_recibido/:
    post:
      tags:
      - transaccion_acta_recibido
      description: create the TransaccionActaRecibido
      operationId: TransaccionActaRecibidoController.PostTransaccionActaRecibido
      parameters:
      - in: body
        name: body
        description: body for TransaccionActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.TransaccionActaRecibido'
      responses:
        "201":
          description: '{int} models.TransaccionActaRecibido'
        "400":
          description: the request contains incorrect syntax
  /transaccion_acta_recibido/{id}:
    get:
      tags:
      - transaccion_acta_recibido
      description: get TransaccionActaRecibidoController
      operationId: TransaccionActaRecibidoController.Get All By id
      parameters:
      - in: path
        name: id
        description: id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TransaccionActaRecibidoController'
        "404":
          description: not found resource
    put:
      tags:
      - transaccion_acta_recibido
      description: update the TransaccionActaRecibido
      operationId: TransaccionActaRecibidoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TransaccionActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.TransaccionActaRecibido'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TransaccionActaRecibido'
        "400":
          description: the request contains incorrect syntax
definitions:
  4658.<nil>.TransaccionSoporteActa:
    title: TransaccionSoporteActa
    type: object
  models.ActaRecibido:
    title: ActaRecibido
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      FechaVistoBueno:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      RevisorId:
        type: integer
        format: int64
      UbicacionId:
        type: integer
        format: int64
  models.Elemento:
    title: Elemento
    type: object
    properties:
      Activo:
        type: boolean
      Cantidad:
        type: integer
        format: int64
      Descuento:
        type: number
        format: double
      EstadoElementoId:
        $ref: '#/definitions/models.EstadoElemento'
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Marca:
        type: string
      Nombre:
        type: string
      Placa:
        type: string
      PorcentajeIvaId:
        type: integer
        format: int64
      Serie:
        type: string
      SoporteActaId:
        $ref: '#/definitions/models.SoporteActa'
      SubgrupoCatalogoId:
        type: integer
        format: int64
      Subtotal:
        type: number
        format: double
      TipoBienId:
        $ref: '#/definitions/models.TipoBien'
      UnidadMedida:
        type: integer
        format: int64
      ValorFinal:
        type: number
        format: double
      ValorIva:
        type: number
        format: double
      ValorTotal:
        type: number
        format: double
      ValorUnitario:
        type: number
        format: double
      Verificado:
        type: boolean
  models.EstadoActa:
    title: EstadoActa
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.EstadoElemento:
    title: EstadoElemento
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.HistoricoActa:
    title: HistoricoActa
    type: object
    properties:
      ActaRecibidoId:
        $ref: '#/definitions/models.ActaRecibido'
      Activo:
        type: boolean
      EstadoActaId:
        $ref: '#/definitions/models.EstadoActa'
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
  models.SoporteActa:
    title: SoporteActa
    type: object
    properties:
      ActaRecibidoId:
        $ref: '#/definitions/models.ActaRecibido'
      Activo:
        type: boolean
      Consecutivo:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      FechaSoporte:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      ProveedorId:
        type: integer
        format: int64
  models.TipoBien:
    title: TipoBien
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TransaccionActaRecibido:
    title: TransaccionActaRecibido
    type: object
    properties:
      ActaRecibido:
        $ref: '#/definitions/models.ActaRecibido'
      SoportesActa:
        $ref: '#/definitions/4658.<nil>.TransaccionSoporteActa'
      UltimoEstado:
        $ref: '#/definitions/models.HistoricoActa'
  models.TransaccionActaRecibidoController:
    title: TransaccionActaRecibidoController
    type: object
tags:
- name: estado_elemento
  description: |
    EstadoElementoController operations for EstadoElemento
- name: soporte_acta
  description: |
    SoporteActaController operations for SoporteActa
- name: tipo_bien
  description: |
    TipoBienController operations for TipoBien
- name: elemento
  description: |
    ElementoController operations for Elemento
- name: acta_recibido
  description: |
    ActaRecibidoController operations for ActaRecibido
- name: estado_acta
  description: |
    EstadoActaController operations for EstadoActa
- name: historico_acta
  description: |
    HistoricoActaController operations for HistoricoActa
- name: transaccion_acta_recibido
  description: |
    operations for TransaccionActaRecibido
